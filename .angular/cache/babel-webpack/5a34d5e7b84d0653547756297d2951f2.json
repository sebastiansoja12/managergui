{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-webstorage\";\nexport let RouteService = /*#__PURE__*/(() => {\n  class RouteService {\n    constructor(http, localStorage) {\n      this.http = http;\n      this.localStorage = localStorage;\n      this.routeUrl = 'http://localhost:8080/api/routes';\n      this.depotinfUrl = 'http://localhost:8080/api/depots';\n      this.registerParcel = 'http://localhost:8080/api/routes';\n      this.userUrl = 'http://localhost:8080/api/routes/user/';\n    }\n\n    findByUsername(username) {\n      return this.http.get('http://localhost:8080/api/routes/' + username + '/user');\n    }\n\n    findAll() {\n      return this.http.get(this.routeUrl);\n    }\n\n    findAllDepots() {\n      return this.http.get(this.depotinfUrl);\n    }\n\n    getCity() {\n      return this.localStorage.retrieve('city');\n    }\n\n    save(parcelRoute) {\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: 'Basic '\n      });\n      return this.http.post(this.registerParcel, parcelRoute, {\n        headers\n      }).pipe(map(data => {\n        return true;\n      }));\n    }\n\n    getAllRoutesByParcelId(id) {\n      return this.http.get('http://localhost:8080/api/routes/' + id + '/parcelId');\n    }\n\n    deleteRouteByParcelId(id) {\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: 'Basic '\n      });\n      return this.http.post('http://localhost:8080/api/routes/' + id + '/parcelId', {\n        headers\n      });\n    }\n\n  }\n\n  RouteService.ɵfac = function RouteService_Factory(t) {\n    return new (t || RouteService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.LocalStorageService));\n  };\n\n  RouteService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RouteService,\n    factory: RouteService.ɵfac\n  });\n  return RouteService;\n})();","map":null,"metadata":{},"sourceType":"module"}